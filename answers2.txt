1. Несемантическая верстка — это когда мы используем в основном <div> и <span>. Это просто блоки, которые не несут никакого смысла. Браузер и поисковик видят просто кучу безликих контейнеров.
Семантическая верстка использует теги, которые объясняют, что внутри них: <article>, <nav>, <header>, <main> и т.д.
Почему это важно:
Для доступности: Скринридеры (программы для незрячих) могут правильно озвучить структуру страницы. Пользователь поймет, где навигация, где основная статья, а где подвал.
Для SEO: Поисковые системы лучше понимают содержание страницы и могут точнее ранжировать ее.
Для разработчиков: Код становится читабельнее. Сразу видно, какой блок за что отвечает, легче искать ошибки и вносить изменения.

2. <article> — это независимый, самодостаточный блок контента, который можно вынести из страницы, и он не потеряет смысл. Например, пост в блоге, новость, комментарий, карточка товара.
<section> — это просто тематическая группировка контента, обычно с заголовком.
Пример из моей практики:
Я делала сайт-блог. На главной странице у меня был <section> с заголовком "Последние статьи". А внутри этого <section> уже шли три независимых блока <article> — сами посты. Каждый пост (<article>) можно было бы распечатать на отдельной странице или разместить в другом месте сайта, и он бы остался понятным.

3. <header> — это вводный контент для всего сайта или для отдельной его секции. Обычно там логотип, навигация, заголовок.
<footer> — это нижний колонтитул, где часто бывает контактная информация, ссылки, копирайт.
Да, их можно использовать несколько раз! У всей страницы может быть один главный <header> и один главный <footer>. Но также у каждой статьи (<article>) или секции (<section>) могут быть свои собственные <header> (например, с датой публикации и автором) и <footer> (например, с блоком тегов или кнопками "лайк/поделиться").

4. ля основного контента нужно использовать тег <main>. <div> — это нейтральный контейнер, который не дает никакой информации. Тег <main> явно говорит браузеру и скринридеру: "Вот здесь находится УНИКАЛЬНЫЙ контент этой страницы, а не то, что повторяется на других (шапка, меню, подвал)".
Это критично для доступности — скринридер может сразу перейти к основному содержимому, минуя повторяющиеся блоки. Для SEO это тоже плюс, так как помогает поисковику выделить суть страниц

5. Обычный список ссылок (<ul> с <li>) — это просто группа ссылок без указания их роли.
<nav> — это семантический контейнер для основной навигации по сайту или по большому разделу страницы.
Разница: <nav> сообщает, что внутри него находятся не просто случайные ссылки, а ключевые элементы меню (например, "Главная", "О нас", "Услуги", "Контакты").
Обязательно использовать <nav> стоит для главного меню сайта. Не обязательно оборачивать в <nav> каждую группу ссылок, например, список соцсетей в подвале или пагинацию (хотя это тоже можно считать навигацией). Но для основного меню — обязательно.

6. Тег <time> сам по себе говорит, что внутри него указано время или дата. А атрибут datetime нужен, чтобы предоставить машиночитаемый формат этой даты.
Почему это важно: Люди могут писать даты по-разному: "25 декабря 2023 г.", "25.12.23", "Dec 25". Браузеру или поисковому роботу сложно это понять. Атрибут datetime дает четкую, стандартную дату в формате YYYY-MM-DD.

7. Если просто написать <img> и под ним абзац <p>, то связь между картинкой и подписью логическая, но не структурная.
<figure> и <figcaption> явно связывают медиа-контент (картинку, диаграмму, код) с его подписью.
Преимущества:
Доступность: Скринридер четко объявляет, что это "figure" и "caption", помогая понять контекст.
Семантика: Поисковики лучше понимают, что подпись относится именно к этой картинке, что может помочь в поиске по картинкам.
Стилизация: Легче стилизовать картинку и подпись как единый блок.

8. <aside> предназначен для контента, который связан с основным содержимым, но является второстепенным, побочным.
Типичные примеры контента для <aside>:
Боковая панель (сайдбар) с ссылками на related articles.
Блок с рекламой.
Глоссарий терминов, упомянутых в статье.
Группа виджетов (например, "облако тегов").
Важно, что если убрать <aside>, основное содержание статьи не должно пострадать.

9. Для SEO: Поисковые роботы — это программы, которые "читают" код. Семантические теги дают им четкие ориентиры: "вот заголовок", "вот навигация", "вот основная статья", "вот цитата". Это помогает роботу точнее понять, о чем страница, и правильно ее проиндексировать, что потенциально повышает рейтинг в поисковой выдаче.
Для доступности: Скринридеры для незрячих пользователей полагаются на семантику, чтобы построить "карту" страницы и позволить пользователю быстро перемещаться по разделам (например, перейти сразу к <main> или найти <nav>). Без семантики страница для такого пользователя — это просто сплошная стена текста.

10. В своих учебных проектах я использовал:
<header> / <footer>: Для шапки и подвала. Помогает выделить повторяющийся контент.
<nav>: Для главного меню. Показывает, где находится основная навигация.
<main>: Для обертки уникального контента. Прямо указывает на самую важную часть страницы.
<article>: Для карточек товаров в интернет-магазине или постов в блоге. Подчеркивает их независимость.
<section>: Для группировки однотипного контента, например, разделов "Преимущества" и "Отзывы" на лендинге.
<time>: Для указания дат публикаций с машинно-читаемым атрибутом datetime.
Как это помогает: Поисковые системы лучше "понимают" мою страницу, что хорошо для SEO. А для пользователей с ограниченными возможностями страница становится понятной и удобной для навигации с помощью скринридера, что является прямым вкладом в доступность.